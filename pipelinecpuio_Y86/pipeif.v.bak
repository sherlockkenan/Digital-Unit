module pipeif( pcsource,pc,bpc,da,jpc,npc,pc4,ins,mem_clock ); 
	input [31:0] pc,bpc,da,jpc;
	input[1:0]pcsource;
	input mem_clock;
	output[31:0]npc,pc4,ins;
	wire [63:0] y86;
	reg [31:0] jump;
	reg [31:0] ins;
	initial
	begin
	jump[31:0]=31'b0;
	end
	assign ins=y86[63:32];
	mux4x32 selectnpc(pc4,bpc,da,jpc,pcsource,npc);
	cla32 pcplus4(pc,32'h4,1'b0,pc4);
	lpm_rom_irom irom(pc[7:2],mem_clock,y86);
	always @ (*)
   case (y86[63:56])
	//nop
	8'h00:begin ins[31:0]<=31'b1; jump[31:0]<=31'b100;end
	// irmovl ->addi
	8'h30:begin ins[31:26]<=6'b001000;ins[25:21]=5'b0;ins[20]<=0; ins[19:16]<=y86[51:48]+1; ins[15:8]<=8'b0; ins[7:0]<=y86[47:40]; jump[31:0]<=31'b10100;end
	// rmmovl ->sw
	8'h40:begin ins[31:26]=6'b101011; ins[25]=1'b0; ins[24:21]=y86[51:48]+1; ins[20]=0;ins[19:16]=y86[55:52]+1; ins[15:8]=8'b0; ins[7:0]=y86[47:40];  jump[31:0]=31'b10100;end
	//mrmovl ->lw
	8'h50: begin ins[31:26]=6'b100011; ins[25]=1'b0;ins[24:21]=y86[51:48]+1;ins[20]=0;ins[19:16]=y86[55:52]+1;ins[15:8]=8'b0; ins[7:0]=y86[47:40]; jump[31:0]=31'b10100;end 
	//op->op
	8'h60:begin ins[31:26]=6'b000000;ins[25]=1'b0; ins[24:21]=y86[51:48]+1; ins[20]=0; ins[19:16]=y86[55:52]+1; ins[15]=0; ins[14:11]=y86[51:48]+1; ins[10:6]=5'b00000;ins[5:0]=6'b100000; jump[31:0]=31'b1000; end 
	//jmp ->j 
	8'h70:begin ins[31:26]=6'b000010;ins[25:8]=16'b0; ins[7:0]=y86[55:48]; jump[31:0]=31'b10000;end 
   endcase
endmodule 
